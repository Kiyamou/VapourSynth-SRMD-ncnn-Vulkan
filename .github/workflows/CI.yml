name: CI

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '.gitignore'
      - '.gitattributes'
      - '.gitmodules'
      - '**/LICENSE'
      - '**.md'

  pull_request:
    branches: [ master ]
    paths-ignore:
      - '.gitignore'
      - '.gitattributes'
      - '.gitmodules'
      - '**/LICENSE'
      - '**.md'

env:
  VULKAN_SDK_VERSION: 1.3.236.0
  VAPOURSYNTH_VERSION: R61
  CMAKE_BUILD_TYPE: Release

jobs:
  build-linux:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: cache-vulkansdk
        id: cache-vulkansdk
        uses: actions/cache@v3
        with:
          path: ${{env.VULKAN_SDK_VERSION}}
          key: vulkansdk-linux-${{env.VULKAN_SDK_VERSION}}

      - name: vulkansdk
        if: steps.cache-vulkansdk.outputs.cache-hit != 'true'
        run: |
          wget https://sdk.lunarg.com/sdk/download/${{env.VULKAN_SDK_VERSION}}/linux/vulkansdk-linux-x86_64-${{env.VULKAN_SDK_VERSION}}.tar.gz?Human=true -O vulkansdk-linux-x86_64-${{env.VULKAN_SDK_VERSION}}.tar.gz
          tar -xf vulkansdk-linux-x86_64-${{env.VULKAN_SDK_VERSION}}.tar.gz
          rm -rf ${{env.VULKAN_SDK_VERSION}}/source ${{env.VULKAN_SDK_VERSION}}/samples
          find ${{env.VULKAN_SDK_VERSION}} -type f | grep -v -E 'vulkan|glslang' | xargs rm

      - name: configure
        run:  |
          wget https://github.com/vapoursynth/vapoursynth/archive/refs/tags/${{env.VAPOURSYNTH_VERSION}}.tar.gz
          tar -xzvf ${{env.VAPOURSYNTH_VERSION}}.tar.gz vapoursynth-${{env.VAPOURSYNTH_VERSION}}/include
          mkdir src/vapoursynth
          mv vapoursynth-${{env.VAPOURSYNTH_VERSION}}/include/VapourSynth.h src/vapoursynth/VapourSynth.h
          mv vapoursynth-${{env.VAPOURSYNTH_VERSION}}/include/VSHelper.h src/vapoursynth/VSHelper.h
          export VULKAN_SDK=$(pwd)/${{env.VULKAN_SDK_VERSION}}/x86_64
          mkdir build && cd build
          cmake -DVAPOURSYNTH_INCLUDE_DIR=../src/vapoursynth ..

      - name: build
        run: cmake --build build -j 2

      - name: strip
        run: strip build/libsrmdnv.so

      - name: upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: linux-vapoursynth-srmd-ncnn-vulkan
          path: build/libsrmdnv.so

  build-windows:

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: cache-vulkansdk
        id: cache-vulkansdk
        uses: actions/cache@v3
        with:
          path: ${{env.VULKAN_SDK_VERSION}}
          key: vulkansdk-windows-${{env.VULKAN_SDK_VERSION}}

      - name: vulkansdk
        if: steps.cache-vulkansdk.outputs.cache-hit != 'true'
        env:
          VULKAN_SDK: ${{env.GITHUB_WORKSPACE}}/${{env.VULKAN_SDK_VERSION}}
        run: |
          Invoke-WebRequest -Uri https://sdk.lunarg.com/sdk/download/${{env.VULKAN_SDK_VERSION}}/windows/VulkanSDK-${{env.VULKAN_SDK_VERSION}}-Installer.exe?Human=true -OutFile VulkanSDK-${{env.VULKAN_SDK_VERSION}}-Installer.exe
          7z x -aoa ./VulkanSDK-${{env.VULKAN_SDK_VERSION}}-Installer.exe -oVulkanSDK
          Remove-Item .\VulkanSDK\Demos -Recurse
          mv VulkanSDK ${{env.VULKAN_SDK_VERSION}}

      - name: configure
        run:  |
          curl -s -L https://github.com/vapoursynth/vapoursynth/archive/refs/tags/${{env.VAPOURSYNTH_VERSION}}.tar.gz -o ${{env.VAPOURSYNTH_VERSION}}.tar.gz
          tar -xzvf ${{env.VAPOURSYNTH_VERSION}}.tar.gz vapoursynth-${{env.VAPOURSYNTH_VERSION}}/include
          mkdir "C:/Program Files/VapourSynth/sdk/include/vapoursynth"
          mv vapoursynth-${{env.VAPOURSYNTH_VERSION}}/include/VapourSynth.h "C:/Program Files/VapourSynth/sdk/include/vapoursynth/VapourSynth.h"
          mv vapoursynth-${{env.VAPOURSYNTH_VERSION}}/include/VSHelper.h "C:/Program Files/VapourSynth/sdk/include/vapoursynth/VSHelper.h"
          $env:VULKAN_SDK="$(pwd)/${{env.VULKAN_SDK_VERSION}}"
          mkdir build && cd build
          cmake ..

      - name: build
        run: cmake --build build -j 2

      - name: strip
        run: strip build/Debug/srmdnv.dll

      - name: upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-vapoursynth-srmd-ncnn-vulkan
          path: build/Debug/srmdnv.dll
