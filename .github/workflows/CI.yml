name: CI

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '.gitignore'
      - '.gitattributes'
      - '.gitmodules'
      - '**/LICENSE'
      - '**.md'

  pull_request:
    branches: [ master ]
    paths-ignore:
      - '.gitignore'
      - '.gitattributes'
      - '.gitmodules'
      - '**/LICENSE'
      - '**.md'

env:
  VULKAN_SDK_VERSION: 1.2.162.0
  VAPOURSYNTH_VERSION: R50
  CMAKE_BUILD_TYPE: Release

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: cache-vulkansdk
        id: cache-vulkansdk
        uses: actions/cache@v3
        with:
          path: ${{env.VULKAN_SDK_VERSION}}
          key: vulkansdk-linux-${{env.VULKAN_SDK_VERSION}}

      - name: vulkansdk
        if: steps.cache-vulkansdk.outputs.cache-hit != 'true'
        run: |
          wget https://sdk.lunarg.com/sdk/download/${{env.VULKAN_SDK_VERSION}}/linux/vulkansdk-linux-x86_64-${{env.VULKAN_SDK_VERSION}}.tar.gz?Human=true -O vulkansdk-linux-x86_64-${{env.VULKAN_SDK_VERSION}}.tar.gz
          tar -xf vulkansdk-linux-x86_64-${{env.VULKAN_SDK_VERSION}}.tar.gz
          rm -rf ${{env.VULKAN_SDK_VERSION}}/source ${{env.VULKAN_SDK_VERSION}}/samples
          find ${{env.VULKAN_SDK_VERSION}} -type f | grep -v -E 'vulkan|glslang' | xargs rm

      - name: configure
        run:  |
          wget https://github.com/vapoursynth/vapoursynth/archive/refs/tags/${{env.VAPOURSYNTH_VERSION}}.tar.gz
          tar -xzvf ${{env.VAPOURSYNTH_VERSION}}.tar.gz vapoursynth-${{env.VAPOURSYNTH_VERSION}}/include
          mkdir src/vapoursynth
          mv vapoursynth-${{env.VAPOURSYNTH_VERSION}}/include/VapourSynth.h src/vapoursynth/VapourSynth.h
          mv vapoursynth-${{env.VAPOURSYNTH_VERSION}}/include/VSHelper.h src/vapoursynth/VSHelper.h
          export VULKAN_SDK=$(pwd)/${{env.VULKAN_SDK_VERSION}}/x86_64
          mkdir build && cd build
          cmake -DVAPOURSYNTH_INCLUDE_DIR=../src/vapoursynth ..

      - name: build
        run: cmake --build build -j 2
